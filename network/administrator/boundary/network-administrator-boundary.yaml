AWSTemplateFormatVersion: "2010-09-09"
Description: "Permissions boundary (deny-guardrail) for Network Administrator role"

Parameters:

  PermissionsBoundaryName:
    Type: String
    Default: network-administrator-permissions-boundary
    Description: "AWS IAM permissions boundary managed policy"

  CustomPolicyPath:
    Type: String
    Default: "/managed/network/"
    AllowedPattern: "^/([A-Za-z0-9+=,.@_-]+/)*$"
    Description: "IAM path prefix for policies (use / to disable)"

  ApprovedSsmInstanceProfiles:
    Type: CommaDelimitedList
    Default: "arn:aws:iam::*:instance-profile/network-ec2-ssm-*,arn:aws:iam::*:instance-profile/network-eks-ssm-*,arn:aws:iam::*:instance-profile/network-batch-ssm-*"
    Description: "Approved SSM-enabled instance profile ARNs/patterns"

  DnssecKmsKeyArns:
    Type: String
    Default: ""
    Description: "KMS key ARNs dedicated to Route53 DNSSEC (Administrator-admin scopes)"
    AllowedPattern: '^$|^arn:aws:kms:[a-z0-9-]+:[0-9]{12}:key/[A-Fa-f0-9-]+(,arn:aws:kms:[a-z0-9-]+:[0-9]{12}:key/[A-Fa-f0-9-]+)*$'

Conditions:
  HasDnssecKmsKeys: !Not [ !Equals [ !Ref DnssecKmsKeyArns, "" ] ]

Resources:

  NetworkAdministratorPermissionsBoundary:

    Type: AWS::IAM::ManagedPolicy
    Properties:

      ManagedPolicyName: !Ref PermissionsBoundaryName
      Path: !Ref CustomPolicyPath
      Description: "Deny-guardrail boundary: broad allow, targeted explicit denies aligned to your relaxed model"

      PolicyDocument:
        Version: "2012-10-17"
        Statement:

# ---------------------------------------------------------------------------- #

          ## -------------------------------------------------------------------
          ## Ceiling = Allow all, then carve back with explicit denies below
          ## -------------------------------------------------------------------
          - Sid: GuardrailAllowAll
            Effect: Allow
            Action: "*"
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Enforce MFA presence everywhere (services that donâ€™t pass the context use BoolIfExists)
          ## -------------------------------------------------------------------
          - Sid: DenyRequestsWithoutMFAFlag
            Effect: Deny
            Action: "*"
            Resource: "*"
            Condition:
              BoolIfExists:
                aws:MultiFactorAuthPresent: "false"  ## Deny if no MFA

          ## -------------------------------------------------------------------
          ## Session must carry mfa=true principal tag (enforced at SSO/assume time)
          ## -------------------------------------------------------------------
          - Sid: DenyUnlessSessionTaggedMFA
            Effect: Deny
            Action: "*"
            Resource: "*"
            Condition:
              StringNotEquals:
                aws:PrincipalTag/mfa: "true"

          ## -------------------------------------------------------------------
          ## MFA max age 1 hour
          ## -------------------------------------------------------------------
          - Sid: DenyIfMFAOlderThanOneHour
            Effect: Deny
            Action: "*"
            Resource: "*"
            Condition:
              NumericGreaterThanIfExists:
                aws:MultiFactorAuthAge: 3600

          ## -------------------------------------------------------------------
          ## PassRole only when CFN is the target service
          ## -------------------------------------------------------------------
          - Sid: DenyPassRoleUnlessCfnService
            Effect: Deny
            Action: iam:PassRole
            Resource: "*"
            Condition:
              StringNotEquals:
                iam:PassedToService: cloudformation.amazonaws.com  ## Force CFN-only PassRole

          ## -------------------------------------------------------------------
          ## Even for CFN, restrict the *role being passed* to CFN exec-role naming
          ## -------------------------------------------------------------------
          - Sid: DenyPassRoleOutsideCfnExecRoles
            Effect: Deny
            Action: iam:PassRole
            NotResource:
              - arn:aws:iam::*:role/cfn-*                          ## Allowed CFN exec roles
              - arn:aws:iam::*:role/cloudformation-*               ## Allowed CFN exec roles
              - arn:aws:iam::*:role/service-role/cfn-*             ## Allowed CFN exec roles
              - arn:aws:iam::*:role/service-role/cloudformation-*  ## Allowed CFN exec roles
            Condition:
              StringEquals:
                iam:PassedToService: cloudformation.amazonaws.com

          ## -------------------------------------------------------------------
          ## IAM admin blocked; allow only read/simulate and SLR creation (further restricted below)
          ## -------------------------------------------------------------------
          - Sid: DenyIamAllExceptReadSimulateAndSLR
            Effect: Deny
            NotAction:
              - iam:CreateServiceLinkedRole  ## allow SLR creation; further limited to network services by next guard
              - iam:Get*                     ## read-only inspection of identities, policies, and metadata
              - iam:List*                    ## list-only enumeration for discovery/audits
              - iam:SimulateCustomPolicy     ## run IAM policy simulator on custom policy documents
              - iam:SimulatePrincipalPolicy  ## simulate effective permissions for a given principal
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Only permit SLR creation for network services
          ## -------------------------------------------------------------------
          - Sid: DenyCreateServiceLinkedRoleUnlessNetworkServices
            Effect: Deny
            Action: iam:CreateServiceLinkedRole
            Resource: "*"
            Condition:
              StringNotEquals:
                iam:AWSServiceName:
                  - elasticloadbalancing.amazonaws.com
                  - globalaccelerator.amazonaws.com
                  - network-firewall.amazonaws.com
                  - route53resolver.amazonaws.com
                  - vpc-lattice.amazonaws.com

          ## -------------------------------````--------------------------------
          ## KMS administration blocked (key/alias/grant/policy)
          ## -------------------------------------------------------------------
          - Sid: DenyKmsKeyAdministration
            Effect: Deny
            ## Toggle Resource/NotResource based on whether DnssecKmsKeyArns is set
            Resource: !If [ HasDnssecKmsKeys, !Ref "AWS::NoValue", "*" ]
            ## NotResource: !Ref DnssecKmsKeyArns  ## EXCEPT these DNSSEC keys
            NotResource: !If
              - HasDnssecKmsKeys
              - !Split [ ",", !Ref DnssecKmsKeyArns ]
              - !Ref "AWS::NoValue"
            Action:
              - kms:CancelKeyDeletion    ## prevent canceling scheduled key deletion once initiated
              - kms:Create*              ## prevent creation of KMS resources (keys, replicas, etc.)
              - kms:CreateAlias          ## prevent creating new key aliases
              - kms:CreateGrant          ## prevent creating grants (delegated key use)
              - kms:Delete*              ## prevent deletions of keys/aliases/grants/policies
              - kms:DeleteAlias          ## explicitly prevent alias deletions
              - kms:Disable*             ## prevent disabling keys/features (e.g., DisableKey, DisableKeyRotation)
              - kms:DisableKeyRotation   ## prevent turning off key rotation
              - kms:EnableKeyRotation    ## prevent turning on key rotation (freeze rotation state)
              - kms:PutKeyPolicy         ## prevent key policy changes (admin/policy tamper)
              - kms:RetireGrant          ## prevent grantees from retiring grants outside governance
              - kms:RevokeGrant          ## prevent administrators from revoking grants ad hoc
              - kms:ScheduleKeyDeletion  ## prevent scheduling key deletion
              - kms:TagResource          ## prevent adding tags on KMS resources
              - kms:UntagResource        ## prevent removing tags on KMS resources
              - kms:Update*              ## prevent updates to keys/aliases/grants/config
              - kms:UpdateAlias          ## explicitly prevent alias updates/retargeting

          ## -------------------------------------------------------------------
          ## Only allow Encrypt/ReEncrypt/DataKey via Secrets Manager (enforce service-bound usage)
          ## -------------------------------------------------------------------
          - Sid: DenyKmsEncryptAndDataKeyExceptSecretsManager
            Effect: Deny
            Action:
              - kms:Encrypt           ## prevent direct encryption unless invoked via Secrets Manager
              - kms:GenerateDataKey*  ## prevent data key generation outside Secrets Manager
              - kms:ReEncrypt*        ## prevent re-encryption unless through Secrets Manager
            Resource: "*"
            Condition:
              StringNotEqualsIfExists:
                kms:ViaService:
                  - secretsmanager.amazonaws.com  ## permit KMS only when invoked by Secrets Manager (encrypt/decrypt/rotation); direct principal KMS calls remain denied
                  - ssm.amazonaws.com             ## allow SSM Parameter Store encryption
                  - s3.amazonaws.com              ## allow S3-initiated KMS use for SSE-KMS (PutObject/Copy/Multipart, replication, lifecycle); still denies direct KMS calls by the principal

          ## -------------------------------------------------------------------
          ## Decrypt allowed only when invoked by approved services (logs, s3, secretsmanager, ssm)
          ## -------------------------------------------------------------------
          - Sid: DenyKmsDecryptOutsideApprovedServices
            Effect: Deny
            Action:
              - kms:Decrypt
            Resource: "*"
            Condition:
              StringNotEqualsIfExists:
                kms:ViaService:
                  - logs.amazonaws.com
                  - s3.amazonaws.com
                  - secretsmanager.amazonaws.com
                  - ssm.amazonaws.com

          ## -------------------------------------------------------------------
          ## Secrets Manager sensitive ops blocked; read/get remains via ceiling
          ## -------------------------------------------------------------------
          - Sid: DenySecretsManagerSensitiveOps
            Effect: Deny
            Action:
              - secretsmanager:CancelRotateSecret        ## prevent canceling an in-progress rotation
              - secretsmanager:Delete*                   ## prevent deletion of secrets, versions, replicas, policies
              - secretsmanager:DeleteResourcePolicy      ## prevent removal of resource-based policy
              - secretsmanager:PutResourcePolicy         ## prevent setting/updating resource-based policy (e.g., cross-account)
              - secretsmanager:RotateSecret              ## prevent manual rotation initiation
              - secretsmanager:StopReplicationToReplica  ## prevent stopping cross-region replication
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Prevent CloudShell exfil/infil and credential injection
          ## -------------------------------------------------------------------
          - Sid: DenyCloudShellFileXferAndCredInject
            Effect: Deny
            Action:
              - cloudshell:GetFileDownloadUrls  ## Prevent file exfil
              - cloudshell:GetFileUploadUrls    ## Prevent file infil
              - cloudshell:PutCredentials       ## Prevent credential seeding
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Amazon Q / Q Business administration blocked
          ## -------------------------------------------------------------------
          - Sid: DenyAmazonQAdministration
            Effect: Deny
            Action:
              - q:Associate*             ## prevent associating data sources/apps/users to Amazon Q
              - q:Create*                ## prevent creation of Amazon Q resources
              - q:Delete*                ## prevent deletion of Amazon Q resources
              - q:Disassociate*          ## prevent removing existing associations
              - q:Put*                   ## prevent configuration/state mutations (Put*)
              - q:TagResource            ## prevent tag additions on Q resources
              - q:UntagResource          ## prevent tag removals on Q resources
              - q:Update*                ## prevent updates to Q resources/config
              - qbusiness:Associate*     ## prevent associations in Amazon Q Business
              - qbusiness:Create*        ## prevent creation of Q Business resources
              - qbusiness:Delete*        ## prevent deletion of Q Business resources
              - qbusiness:Disassociate*  ## prevent disassociations in Q Business
              - qbusiness:Put*           ## prevent configuration/state mutations (Put*) in Q Business
              - qbusiness:TagResource    ## prevent tag additions on Q Business resources
              - qbusiness:UntagResource  ## prevent tag removals on Q Business resources
              - qbusiness:Update*        ## prevent updates to Q Business resources/config
            Resource: "*"

          ## -------------------------------------------------------------------
          ## No org-wide RAM toggles
          ## -------------------------------------------------------------------
          - Sid: DenyOrgWideRAMSharing
            Effect: Deny
            Action:
              - ram:DisableSharingWithAwsOrganization  ## prevent turning off org-wide RAM sharing (would break existing shares)
              - ram:EnableSharingWithAwsOrganization   ## prevent enabling org-wide RAM sharing without governance; require explicit shares instead
            Resource: "*"

          ## -------------------------------------------------------------------
          ## AWS Config tamper prevention
          ## -------------------------------------------------------------------
          - Sid: DenyConfigTamper
            Effect: Deny
            Action:
              - config:Delete*                          ## prevent deletion of AWS Config resources/history (broad)
              - config:DeleteConfigRule                 ## prevent removing individual Config rules
              - config:DeleteRemediationConfigurations  ## prevent deleting remediation configs
              - config:PutConfigRule                    ## prevent creating/updating Config rules
              - config:PutConfigurationRecorder         ## prevent creating/updating the configuration recorder
              - config:PutDeliveryChannel               ## prevent delivery channel changes (S3/KMS/SNS)
              - config:PutRemediationConfigurations     ## prevent creating/updating remediation configs
              - config:StopConfigurationRecorder        ## prevent stopping the configuration recorder
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CloudTrail tamper prevention
          ## -------------------------------------------------------------------
          - Sid: DenyCloudTrailTamper
            Effect: Deny
            Action:
              - cloudtrail:DeleteTrail        ## prevent deletion of CloudTrail trails
              - cloudtrail:PutEventSelectors  ## prevent changing selectors (event filtering/scope)
              - cloudtrail:StopLogging        ## prevent disabling trail logging
              - cloudtrail:UpdateTrail        ## prevent mutating trail config (destinations/KMS/etc.)
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CloudTrail Insights toggle off (avoid stealthy audit-signal changes)
          ## -------------------------------------------------------------------
          - Sid: DenyCloudTrailInsightsToggle
            Effect: Deny
            Action:
              - cloudtrail:PutInsightSelectors  ## prevent enable/disable insights
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CloudWatch Logs tamper prevention
          ## -------------------------------------------------------------------
          - Sid: DenyLogsTamper
            Effect: Deny
            Action:
              - logs:AssociateKmsKey        ## prevent associating arbitrary KMS keys to log groups
              - logs:Delete*                ## prevent deletion of log groups/streams/filters/exports
              - logs:DisassociateKmsKey     ## prevent removing KMS encryption from log groups
              - logs:PutResourcePolicy      ## prevent cross-account Logs resource policy changes
              - logs:PutRetentionPolicy     ## retention changes blocked
              - logs:PutSubscriptionFilter  ## prevent exfiltration via subscription filters
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CloudWatch metrics/alarms tamper prevention
          ## -------------------------------------------------------------------
          - Sid: DenyCloudWatchAlarmTamper
            Effect: Deny
            Action:
              - cloudwatch:DeleteAlarms         ## prevent deletion of CloudWatch alarms
              - cloudwatch:DisableAlarmActions  ## can't mute/disable alarm actions
              - cloudwatch:SetAlarmState        ## can't force alarm state manually
            Resource: "*"

          ## -------------------------------------------------------------------
          ## X-Ray configuration tamper prevention
          ## -------------------------------------------------------------------
          - Sid: DenyXRayTamper
            Effect: Deny
            Action:
              - xray:Delete*  ## prevent deletion of X-Ray groups/rules/config
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Keep account-level PAB enforced
          ## -------------------------------------------------------------------
          - Sid: DenyS3AccountPublicAccessBlockDelete
            Effect: Deny
            Action:
              - s3:DeleteAccountPublicAccessBlock  ## prevent removing the account-level S3 Public Access Block (PAB); keeps global prevent enforced
            Resource: "*"

          ## -------------------------------------------------------------------
          ## SSM: keep only high-risk ops denied; permit associations, MW, Automation, Parameters
          ## -------------------------------------------------------------------
          - Sid: DenySsmHighRiskAdminOnly
            Effect: Deny
            Action:
              - ssm:DeleteComplianceItems      ## prevent manual tampering of compliance data
              - ssm:DeleteInventory            ## prevent deleting collected inventory
              - ssm:PutInventory               ## prevent spoofing inventory from this principal
              - ssm:UpdateInstanceInformation  ## agent reports only; not via human principal
              - ssm:UpdateServiceSetting       ## prevent account-level SSM setting changes
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Extra high-risk account-wide features off (adds to your existing admin-only deny)
          ## -------------------------------------------------------------------
          - Sid: DenySsmHighRiskExtrasTight
            Effect: Deny
            Action:
              - ssm:CreateActivation           ## hybrid registration bootstrap (creates activation codes) â€” prevents onboarding rogue on-prem/other-cloud hosts
              - ssm:RegisterManagedInstance    ## uses activation to enroll a hybrid managed instance â€” prevent unmanaged asset onboarding
              - ssm:DeregisterManagedInstance  ## removal hides assets from inventory/compliance â€” preserve audit trail
              - ssm:CreateResourceDataSync     ## sets up cross-account/region S3/Org sync â€” potential data exfil/drift
              - ssm:UpdateResourceDataSync     ## mutates existing sync targets/filters â€” prevents silent redirection
              - ssm:DeleteResourceDataSync     ## disables telemetry export â€” preserves central visibility
              - ssm:PutComplianceItems         ## manual write of compliance results â€” blocks forging/tampering (pairs with DeleteComplianceItems deny)
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Enforce tag-gating for sessions/RunCommand â€” deny if tag is MISSING
          ## -------------------------------------------------------------------
          - Sid: DenySsmRunWhenTagMissing
            Effect: Deny
            Action:
              - ssm:StartSession
              - ssm:SendCommand
            Resource: "*"
            Condition:
              "Null":
                ssm:resourceTag/NetworkManaged: "true"  ## key absent -> deny

          ## -------------------------------------------------------------------
          ## Enforce tag-gating for sessions/RunCommand â€” deny if tag value != "true"
          ## -------------------------------------------------------------------
          - Sid: DenySsmRunWhenTagNotTrue
            Effect: Deny
            Action:
              - ssm:StartSession
              - ssm:SendCommand
            Resource: "*"
            Condition:
              StringNotEquals:
                ssm:resourceTag/NetworkManaged: "true"  ## present but not "true" -> deny

          ## -------------------------------------------------------------------
          ## Disallow Automation when an assume role is supplied (caller context only)
          ## -------------------------------------------------------------------
          - Sid: DenySsmAutomationWithAssumeRole
            Effect: Deny
            Action:
              - ssm:StartAutomationExecution
            Resource: "*"
            Condition:
              "Null":
                ssm:AutomationAssumeRole: "false"  ## key present (not null) -> deny

          ## -------------------------------------------------------------------
          ## Require an instance profile on every EC2 launch
          ## -------------------------------------------------------------------
          - Sid: DenyRunInstancesWithoutInstanceProfile
            Effect: Deny
            Action: ec2:RunInstances
            Resource: "*"
            Condition:
              "Null":
                ec2:InstanceProfile: "true"  ## deny when no instance profile is provided

          ## -------------------------------------------------------------------
          ## Service Quotas: prevent Direct Connect quota increases (ticketed process only)
          ## -------------------------------------------------------------------
          - Sid: DenyServiceQuotasDirectConnectIncrease
            Effect: Deny
            Action:
              - servicequotas:RequestServiceQuotaIncrease  ## require quota raises via separate ticketed/governed path
            Resource: "*"
            Condition:
              StringEquals:
                servicequotas:service: directconnect

          ## -------------------------------------------------------------------
          ## Access Analyzer lifecycle/admin blocked; read still allowed by default ceiling
          ## -------------------------------------------------------------------
          - Sid: DenyAccessAnalyzerAdministration
            Effect: Deny
            Action:
              - access-analyzer:ApplyArchiveRule   ## prevent suppressing findings via archive rules
              - access-analyzer:Create*            ## prevent creation of analyzers and related resources
              - access-analyzer:CreateArchiveRule  ## prevent creating archive rules (explicit)
              - access-analyzer:Delete*            ## prevent deletion of analyzers and configs
              - access-analyzer:DeleteArchiveRule  ## prevent removing archive rules (explicit)
              - access-analyzer:StartResourceScan  ## prevent ad-hoc scans outside governed workflows
              - access-analyzer:TagResource        ## prevent tag tampering on analyzers
              - access-analyzer:UntagResource      ## prevent tag removal on analyzers
              - access-analyzer:Update*            ## prevent configuration/archiverule updates
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Prevent disabling core security services
          ## -------------------------------------------------------------------
          - Sid: DenySecurityServicesDisable
            Effect: Deny
            Action:
              - guardduty:DeleteDetector                     ## prevent deletion of GuardDuty detector
              - guardduty:DisableOrganizationAdminAccount    ## prevent disabling GuardDuty org admin
              - guardduty:UpdateDetector                     ## prevent weakening GuardDuty detector config
              - inspector2:Disable                           ## prevent disabling Amazon Inspector
              - inspector2:DisableDelegatedAdminAccount      ## prevent removing Inspector delegated admin
              - securityhub:DisableOrganizationAdminAccount  ## prevent disabling Security Hub org admin
              - securityhub:DisableSecurityHub               ## prevent disabling Security Hub
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Macie disable/org admin blocked
          ## -------------------------------------------------------------------
          - Sid: DenyMacieDisableAndOrgAdmin
            Effect: Deny
            Action:
              - macie2:DisableMacie                     ## prevent disabling Amazon Macie
              - macie2:DisableOrganizationAdminAccount  ## prevent disabling Macie org admin
            Resource: "*"

          ## -------------------------------------------------------------------
          ## No Resource Explorer/Groups admin or bulk tagging
          ## -------------------------------------------------------------------
          - Sid: DenyResourceExplorerAndTaggingAdministration
            Effect: Deny
            Action:
              - resource-explorer-2:AssociateDefaultView     ## prevent changing the accountâ€™s default search view
              - resource-explorer-2:Create*                  ## prevent creating views/indexes across accounts/regions
              - resource-explorer-2:Delete*                  ## prevent deleting views/indexes (breaks inventory/search)
              - resource-explorer-2:DisassociateDefaultView  ## prevent removing the default view association
              - resource-explorer-2:TagResource              ## prevent tag tampering on Explorer resources
              - resource-explorer-2:UntagResource            ## prevent tag removal on Explorer resources
              - resource-explorer-2:Update*                  ## prevent updates to views/index configs
              - resource-groups:Create*                      ## prevent creating Resource Groups outside IaC
              - resource-groups:Delete*                      ## prevent deleting groups used by ops/reporting
              - resource-groups:Tag*                         ## prevent tag additions on groups (drift/ABAC bypass)
              - resource-groups:Untag*                       ## prevent tag removals on groups
              - resource-groups:Update*                      ## prevent mutating group definitions/queries
              - tag:TagResources                             ## prevent bulk cross-service tagging via Tag Editor
              - tag:UntagResources                           ## prevent bulk tag removal via Tag Editor
            Resource: "*"

          ## -------------------------------------------------------------------
          ## OAM sink admin blocked (prevent cross-account telemetry sink tamper)
          ## -------------------------------------------------------------------
          - Sid: DenyOamSinkAdministration
            Effect: Deny
            Action:
              - oam:CreateSink     ## prevent creating cross-account telemetry sinks (logs/metrics/traces exfil path)
              - oam:DeleteSink     ## prevent deleting sinks and breaking centralized observability pipelines
              - oam:PutSinkPolicy  ## prevent modifying sink resource policies (cross-account access control)
              - oam:TagResource    ## prevent tag additions on OAM sinks (cost/ABAC tamper)
              - oam:UntagResource  ## prevent tag removals on OAM sinks
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CFN safety rails: no stack set deletes, no stack policy fiddling, no disabling termination protection
          ## -------------------------------------------------------------------
          - Sid: DenyCloudFormationPolicyAndDeletes
            Effect: Deny
            Action:
              - cloudformation:DeleteStackInstances         ## prevent destructive StackSet instance removals
              - cloudformation:DeleteStackSet               ## prevent deletion of entire StackSets
              - cloudformation:SetStackPolicy               ## disallow changing stack protection policies
              - cloudformation:UpdateTerminationProtection  ## prevent toggling termination protection
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeCommit: prevent repo lifecycle admin; allow normal Git ops
          ## -------------------------------------------------------------------
          - Sid: DenyCodeCommitRepoLifecycleAdmin
            Effect: Deny
            Action:
              - codecommit:CreateRepository             ## repos created only via IaC/approved pipeline
              - codecommit:DeleteRepository             ## protect history/refs; no ad-hoc deletions
              - codecommit:UpdateRepositoryName         ## avoid breaking remotes/automation by renames
              - codecommit:UpdateRepositoryDescription  ## prevent unmanaged metadata drift
              - codecommit:PutRepositoryTriggers        ## prevent out-of-band trigger changes/exfil paths
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodePipeline: prevent pipeline lifecycle/admin (definition edits via CFN only)
          ## -------------------------------------------------------------------
          - Sid: DenyCodePipelineLifecycleAdmin
            Effect: Deny
            Action:
              - codepipeline:CreatePipeline  ## pipelines defined in CFN only
              - codepipeline:UpdatePipeline  ## prevent console/API edits to definition
              - codepipeline:DeletePipeline  ## no destructive deletes outside change control
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodePipeline: prevent stage transition toggles (prevents pausing/resuming stages)
          ## -------------------------------------------------------------------
          - Sid: DenyCodePipelineStageTransitionToggle
            Effect: Deny
            Action:
              - codepipeline:DisableStageTransition  ## prevent pausing gates to bypass approvals
              - codepipeline:EnableStageTransition   ## prevent manual re-enables that hide drift
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodePipeline: prevent webhook administration
          ## -------------------------------------------------------------------
          - Sid: DenyCodePipelineWebhookAdmin
            Effect: Deny
            Action:
              - codepipeline:PutWebhook     ## prevent creating/updating external webhooks
              - codepipeline:DeleteWebhook  ## prevent removing governed integrations
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodePipeline: prevent custom action/job worker APIs (humans shouldnâ€™t call these)
          ## -------------------------------------------------------------------
          - Sid: DenyCodePipelineCustomActionJobs
            Effect: Deny
            Action:
              - codepipeline:CreateCustomActionType         ## prevent defining custom action types
              - codepipeline:DeleteCustomActionType         ## prevent removing custom action types
              - codepipeline:PollForJobs                    ## prevent worker polling by human principals
              - codepipeline:AcknowledgeJob                 ## prevent manual job acknowledgements
              - codepipeline:PutJobSuccessResult            ## prevent faking job success
              - codepipeline:PutJobFailureResult            ## prevent forcing job failure
              - codepipeline:AcknowledgeThirdPartyJob       ## prevent 3P job acknowledgements
              - codepipeline:GetThirdPartyJobDetails        ## prevent reading 3P job payloads
              - codepipeline:PutThirdPartyJobSuccessResult  ## prevent faking 3P job success
              - codepipeline:PutThirdPartyJobFailureResult  ## prevent forcing 3P job failure
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeBuild: prevent project lifecycle/admin (definitions via CFN only)
          ## -------------------------------------------------------------------
          - Sid: DenyCodeBuildProjectLifecycleAdmin
            Effect: Deny
            Action:
              - codebuild:CreateProject  ## projects created via IaC only
              - codebuild:UpdateProject  ## prevent console/API edits to project config
              - codebuild:DeleteProject  ## no destructive deletes outside change control
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeBuild: prevent webhook administration
          ## -------------------------------------------------------------------
          - Sid: DenyCodeBuildWebhookAdmin
            Effect: Deny
            Action:
              - codebuild:CreateWebhook  ## prevent adding SCM-trigger webhooks
              - codebuild:DeleteWebhook  ## prevent removing governed webhooks
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeBuild: prevent source credential/admin token operations
          ## -------------------------------------------------------------------
          - Sid: DenyCodeBuildSourceCredentialAdmin
            Effect: Deny
            Action:
              - codebuild:ImportSourceCredentials  ## prevent storing SCM creds in the account
              - codebuild:DeleteSourceCredentials  ## prevent covert credential cleanup/tamper
              - codebuild:PersistOAuthToken        ## prevent persisting OAuth tokens in CodeBuild
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeBuild: prevent resource policy administration on projects/report groups
          ## -------------------------------------------------------------------
          - Sid: DenyCodeBuildResourcePolicyAdmin
            Effect: Deny
            Action:
              - codebuild:PutResourcePolicy     ## prevent cross-account exposure via resource policies
              - codebuild:DeleteResourcePolicy  ## prevent tampering/removal of existing policies
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeBuild: prevent making projects public
          ## -------------------------------------------------------------------
          - Sid: DenyCodeBuildPublicProjectVisibility
            Effect: Deny
            Action:
              - codebuild:UpdateProjectVisibility ## disallow switching to PUBLIC visibility
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeBuild Fleets: prevent fleet lifecycle/admin
          ## -------------------------------------------------------------------
          - Sid: DenyCodeBuildFleetAdmin
            Effect: Deny
            Action:
              - codebuild:CreateFleet  ## prevent creating compute fleets
              - codebuild:UpdateFleet  ## prevent changing fleet capacity/config
              - codebuild:DeleteFleet  ## prevent fleet deletion outside governance
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeBuild: prevent batch build APIs (single-build ops only)
          ## -------------------------------------------------------------------
          - Sid: DenyCodeBuildBatchBuilds
            Effect: Deny
            Action:
              - codebuild:StartBuildBatch  ## restrict to single builds; no batch starts
              - codebuild:RetryBuildBatch  ## prevent batch retries by humans
              - codebuild:StopBuildBatch   ## prevent stopping batches manually
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeBuild: prevent deletion of build records
          ## -------------------------------------------------------------------
          - Sid: DenyCodeBuildDeleteBuilds
            Effect: Deny
            Action:
              - codebuild:BatchDeleteBuilds  ## preserve build history/logs for audit/forensics
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeDeploy: prevent application/deployment group/config admin (definitions via CFN only)
          ## -------------------------------------------------------------------
          - Sid: DenyCodeDeployAppGroupConfigAdmin
            Effect: Deny
            Action:
              - codedeploy:CreateApplication        ## apps defined via IaC only
              - codedeploy:UpdateApplication        ## prevent console/API edits to app metadata
              - codedeploy:DeleteApplication        ## prevent destructive deletes
              - codedeploy:CreateDeploymentGroup    ## groups defined via IaC only
              - codedeploy:UpdateDeploymentGroup    ## prevent console/API edits to group config
              - codedeploy:DeleteDeploymentGroup    ## prevent destructive deletes
              - codedeploy:CreateDeploymentConfig   ## deployment configs via IaC only
              - codedeploy:DeleteDeploymentConfig   ## prevent removal of governed configs
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeDeploy: prevent GitHub token administration
          ## -------------------------------------------------------------------
          - Sid: DenyCodeDeployGitHubTokenAdmin
            Effect: Deny
            Action:
              - codedeploy:RegisterGitHubAccountToken  ## prevent storing/updating GitHub tokens in account
              - codedeploy:DeleteGitHubAccountToken    ## prevent covert token removal/tamper
            Resource: "*"

          ## -------------------------------------------------------------------
          ## CodeDeploy: prevent on-premises instance registration
          ## -------------------------------------------------------------------
          - Sid: DenyCodeDeployOnPremAdmin
            Effect: Deny
            Action:
              - codedeploy:RegisterOnPremisesInstance    ## prevent unmanaged on-prem registration
              - codedeploy:DeregisterOnPremisesInstance  ## prevent deregistration that hides assets
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Direct Connect administration blocked
          ## -------------------------------------------------------------------
          - Sid: DenyDirectConnectAdministration
            Effect: Deny
            Action:
              - directconnect:Accept*        ## prevent accepting hosted connections/VIFs/association proposals without governance
              - directconnect:Allocate*      ## prevent allocating hosted connections or (transit/private/public) virtual interfaces
              - directconnect:Associate*     ## prevent associating gateways/VIFs (e.g., DXGW <-> VGW/TGW) outside IaC/change control
              - directconnect:Attach*        ## cover any attach-style DX APIs; prevent attaching resources to LAGs/gateways
              - directconnect:Confirm*       ## prevent confirming connections/VIFs into active state without review
              - directconnect:Create*        ## prevent creating connections/LAGs/gateways/VIFs directly
              - directconnect:Delete*        ## prevent deletion of DX resources that would disrupt connectivity
              - directconnect:Detach*        ## cover any detach-style DX APIs; prevent detaching from LAGs/gateways
              - directconnect:Disassociate*  ## prevent disassociation of gateways/VIFs once governed
              - directconnect:Update*        ## prevent configuration changes on DX resources (MTU, VLAN, BGP, names)
              - directconnect:TagResource    ## prevent tag additions (cost/ABAC drift)
              - directconnect:UntagResource  ## prevent tag removals (cost/ABAC tamper)
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Route53 Domains (registrar) admin off (protect org domain ownership)
          ## -------------------------------------------------------------------
          - Sid: DenyRoute53DomainsRegistrarAdministration
            Effect: Deny
            Action:
              - route53domains:AssociateDelegationSignerToDomain       ## prevent DS record add
              - route53domains:DeleteDomain                            ## prevent destructive domain deletes
              - route53domains:DisableDomainAutoRenew                  ## prevent disabling auto-renew
              - route53domains:DisassociateDelegationSignerFromDomain  ## prevent DS record drop
              - route53domains:EnableDomainAutoRenew                   ## prevent auto-renew enable
              - route53domains:RegisterDomain                          ## prevent new domain registrations
              - route53domains:TransferDomain                          ## prevent outbound transfers
              - route53domains:TransferDomainToAnotherAwsAccount       ## prevent account pushes
              - route53domains:UpdateDomainContact                     ## prevent owner/contacts edits
              - route53domains:UpdateDomainContactPrivacy              ## prevent WHOIS privacy flips
              - route53domains:UpdateDomainNameservers                 ## prevent nameserver swaps
              - route53domains:UpdateTagsForDomain                     ## prevent tag changes on domains
            Resource: "*"

# ---------------------------------------------------------------------------- #

          ## -------------------------------------------------------------------
          ## ACM safety rail (prevent key exfil & account-level tamper)
          ## -------------------------------------------------------------------
          - Sid: DenyAcmTamper
            Effect: Deny
            Action:
              - acm:DeleteCertificate         ## prevent destructive cert deletions in prod
              - acm:ExportCertificate         ## prevent private key material exfiltration
              - acm:PutAccountConfiguration   ## prevent account-wide ACM setting changes
              - acm:UpdateCertificateOptions  ## prevent toggling key-usage/renewal options
            Resource: "*"

# ---------------------------------------------------------------------------- #

          ## -------------------------------------------------------------------
          ## ACM Private CA administration off (admins don't manage CA lifecycle)
          ## -------------------------------------------------------------------
          - Sid: DenyAcmPcaAdministration
            Effect: Deny
            Action:
              - acm-pca:CreateCertificateAuthority              ## prevent creating private CAs
              - acm-pca:DeleteCertificateAuthority              ## prevent deleting CAs
              - acm-pca:UpdateCertificateAuthority              ## prevent state/attr changes
              - acm-pca:RestoreCertificateAuthority             ## prevent CA restore
              - acm-pca:PutPolicy                               ## prevent CA resource policies
              - acm-pca:TagCertificateAuthority                 ## prevent adding tags on CAs
              - acm-pca:UntagCertificateAuthority               ## prevent removing tags on CAs
              - acm-pca:CreatePermission                        ## prevent delegate issue perms
              - acm-pca:DeletePermission                        ## prevent revoke delegate perms
              - acm-pca:ImportCertificateAuthorityCertificate   ## prevent CA cert import/rotate
            Resource: "*"

          ## -------------------------------------------------------------------
          ## SNS topic deletion and policy/admin blocked
          ## -------------------------------------------------------------------
          - Sid: DenySnsDestructiveAndPolicyAdmin
            Effect: Deny
            Action:
              - sns:AddPermission       ## prevent granting new publish/subscribe permissions on topics
              - sns:DeleteTopic         ## prevent deletion of SNS topics
              - sns:RemovePermission    ## prevent removal of existing topic permissions
              - sns:SetTopicAttributes  ## prevent policy/KMS/delivery attribute changes
            Resource: "*"

          ## -------------------------------------------------------------------
          ## SQS queue deletion and policy/admin blocked
          ## -------------------------------------------------------------------
          - Sid: DenySqsDeleteAndPolicyAdmin
            Effect: Deny
            Action:
              - sqs:AddPermission       ## prevent granting new permissions on queues
              - sqs:DeleteQueue         ## prevent deletion of SQS queues
              - sqs:RemovePermission    ## prevent removal of existing queue permissions
              - sqs:SetQueueAttributes  ## prevent policy/KMS/visibility/retention attribute changes
            Resource: "*"

# ---------------------------------------------------------------------------- #

          ## -------------------------------------------------------------------
          ## ECS lifecycle restricted (admin not needed by admin-read stance)
          ## -------------------------------------------------------------------
          - Sid: DenyEcsClusterServiceTaskLifecycle
            Effect: Deny
            Action:
              - ecs:CreateCluster             ## prevent creating new ECS clusters (non-provisioning admin stance)
              - ecs:CreateService             ## prevent creating ECS services
              - ecs:DeleteCluster             ## prevent deleting clusters
              - ecs:DeleteService             ## prevent deleting services
              - ecs:DeregisterTaskDefinition  ## preserve task-def versions; no deregistration
              - ecs:RegisterTaskDefinition    ## prevent publishing new task definitions
              - ecs:RunTask                   ## prevent ad-hoc one-off task runs
              - ecs:StartTask                 ## prevent manual starts (EC2 launch type)
              - ecs:StopTask                  ## prevent stopping running tasks outside change control
              - ecs:UpdateService             ## prevent updates (scaling, task-def/version changes)
            Resource: "*"

          ## -------------------------------------------------------------------
          ## EKS destructive/upgrade operations blocked
          ## -------------------------------------------------------------------
          - Sid: DenyEksDestructiveOps
            Effect: Deny
            Action:
              - eks:Delete*                 ## prevent deletion of clusters/nodegroups/add-ons and other destructive ops
              - eks:UpdateClusterConfig     ## prevent changing cluster networking/logging/compute settings
              - eks:UpdateClusterVersion    ## prevent upgrading cluster control plane version
              - eks:UpdateNodegroupConfig   ## prevent nodegroup config changes (scaling, AMI/launch template opts)
              - eks:UpdateNodegroupVersion  ## prevent nodegroup version/AMI upgrades
            Resource: "*"

          ## -------------------------------------------------------------------
          ## ECR push/delete/policy admin blocked (read/pull remains via ceiling)
          ## -------------------------------------------------------------------
          - Sid: DenyEcrPushDeleteAndPolicyAdmin
            Effect: Deny
            Action:
              - ecr:BatchDeleteImage        ## prevent bulk image/tag deletions
              - ecr:CompleteLayerUpload     ## prevent finalizing image pushes
              - ecr:DeleteRepository        ## prevent deleting repositories
              - ecr:DeleteRepositoryPolicy  ## prevent repo policy removal
              - ecr:InitiateLayerUpload     ## prevent starting image layer uploads
              - ecr:PutImage                ## prevent publishing image manifests
              - ecr:SetRepositoryPolicy     ## prevent repo policy administration
              - ecr:UploadLayerPart         ## prevent uploading image layer parts
            Resource: "*"

# ---------------------------------------------------------------------------- #

          ## -------------------------------------------------------------------
          ## Prevent swapping to an unapproved profile after launch (reuses parameter)
          ## -------------------------------------------------------------------
          - Sid: DenyAssociateOrReplaceUnapprovedInstanceProfile
            Effect: Deny
            Action:
              - ec2:AssociateIamInstanceProfile            ## prevent attaching a new instance profile to an existing instance unless approved
              - ec2:ReplaceIamInstanceProfileAssociation   ## prevent swapping an instanceâ€™s current profile unless approved
            Resource: "*"
            Condition:
              StringNotLike:
                ec2:InstanceProfile: !Ref ApprovedSsmInstanceProfiles  ## deny when target instance profile ARN/name does NOT match the allowlist patterns

          ## -------------------------------------------------------------------
          ## Prevent removing the instance profile (keeps SSM capability attached)
          ## -------------------------------------------------------------------
          - Sid: DenyDisassociateInstanceProfile
            Effect: Deny
            Action: ec2:DisassociateIamInstanceProfile
            Resource: "*"

          ## -------------------------------------------------------------------
          ## VPC Peering â€” fully disabled (create/accept/modify/delete)
          ## -------------------------------------------------------------------
          - Sid: DenyVpcPeeringAll
            Effect: Deny
            Action:
              - ec2:CreateVpcPeeringConnection         ## Requester creates a peering request (same or cross account/region). State = pending-acceptance.
              - ec2:AcceptVpcPeeringConnection         ## Accepter approves a pending request; connection becomes active.
              - ec2:RejectVpcPeeringConnection         ## Accepter rejects a pending request; prevents the peering from being established.
              - ec2:DeleteVpcPeeringConnection         ## Either side deletes an active/pending peering; tears down the link (routes then become ineffective).
              - ec2:ModifyVpcPeeringConnectionOptions  ## Toggle per-VPC options on the peering: DNS resolution across VPCs (AllowDnsResolutionFromRemoteVpc) and legacy ClassicLink egress flags.
            Resource: "*"

# ---------------------------------------------------------------------------- #

          ## -------------------------------------------------------------------
          ## EventBridge / Scheduler admin blocked (no rules/targets/buses lifecycle)
          ## -------------------------------------------------------------------
          - Sid: DenyEventsAndSchedulerAdministration
            Effect: Deny
            Action:
              - events:CreateEventBus    ## prevent creating custom event buses that bypass governance
              - events:DeleteEventBus    ## prevent deleting event buses (loss of routes/audits)
              - events:DeleteRule        ## prevent removing rules that drive automations/alerts
              - events:PutPermission     ## prevent cross-account bus sharing/permissions changes
              - events:PutRule           ## prevent creating/updating rules (schedules/pattern patterns)
              - events:PutTargets        ## prevent attaching targets (invocation pathways)
              - events:RemovePermission  ## prevent removing existing bus permissions
              - events:RemoveTargets     ## prevent detaching targets (silent disablement)
              - events:TagResource       ## prevent tag additions on EventBridge resources
              - events:UntagResource     ## prevent tag removals on EventBridge resources
              - scheduler:Create*        ## prevent creation of Scheduler schedules/groups
              - scheduler:Delete*        ## prevent deletions of schedules/groups
              - scheduler:TagResource    ## prevent tag additions on Scheduler resources
              - scheduler:UntagResource  ## prevent tag removals on Scheduler resources
              - scheduler:Update*        ## prevent updates to schedules (timing, payload, target)
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Detective admin blocked
          ## -------------------------------------------------------------------
          - Sid: DenyDetectiveAdministration
            Effect: Deny
            Action:
              - detective:Create*                          ## prevent creation of graphs/members/invitations and related resources
              - detective:Delete*                          ## prevent deletion of graphs/members/invitations and data sources
              - detective:DisableOrganizationAdminAccount  ## prevent disabling the org delegated admin for Detective
              - detective:EnableOrganizationAdminAccount   ## prevent enabling org delegated admin without governance
              - detective:Start*                           ## prevent starting monitoring/data-source ingestion operations
              - detective:TagResource                      ## prevent tag additions on Detective resources (cost/ABAC tamper)
              - detective:UntagResource                    ## prevent tag removals on Detective resources
              - detective:Update*                          ## prevent updates to Detective configurations and packages
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Security Lake admin blocked
          ## -------------------------------------------------------------------
          - Sid: DenySecurityLakeAdministration
            Effect: Deny
            Action:
              - securitylake:Create*        ## prevent creating data lakes, sources, subscribers, custom sources, and views outside governance
              - securitylake:Delete*        ## prevent deleting data lakes/views/subscribers (would disrupt central log lake)
              - securitylake:Put*           ## prevent config/resource policy changes (e.g., PutDataLakeSettings, auto-enable, subscriber notifications)
              - securitylake:TagResource    ## prevent tag additions on Security Lake resources (cost/compliance/ABAC integrity)
              - securitylake:UntagResource  ## prevent tag removals on Security Lake resources
              - securitylake:Update*        ## prevent updates to lake, sources, and subscriber configurations
            Resource: "*"

          ## -------------------------------------------------------------------
          ## Audit Manager admin blocked
          ## -------------------------------------------------------------------
          - Sid: DenyAuditManagerAdministration
            Effect: Deny
            Action:
              - auditmanager:Create*        ## prevent creating assessments/frameworks/controls/delegations outside governance
              - auditmanager:Delete*        ## prevent deleting assessments/evidence/frameworks/reports
              - auditmanager:Put*           ## prevent configuration/report-publish mutations via Put* APIs
              - auditmanager:TagResource    ## prevent tag additions on Audit Manager resources
              - auditmanager:UntagResource  ## prevent tag removals on Audit Manager resources
              - auditmanager:Update*        ## prevent updates to assessments/settings/frameworks/controls
            Resource: "*"

# ---------------------------------------------------------------------------- #

Outputs:

  ## ---------------------------------------------------------------------------
  ## Resolved ARN of the permissions-boundary managed policy.
  ## ---------------------------------------------------------------------------
  NetworkAdministratorPermissionsBoundaryArn:
    Description: "ARN of the Network Administrator IAM permissions boundary managed policy"
    Value: !Ref NetworkAdministratorPermissionsBoundary
